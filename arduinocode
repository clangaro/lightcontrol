#include <Wire.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>
#include <RTClib.h>

#define OLED_RESET -1
Adafruit_SSD1306 display(128, 64, &Wire, OLED_RESET);
RTC_DS3231 rtc;

const long interval = 1000;  // 1 second
unsigned long previousMillis = 0;

#include <Wire.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>
#include <RTClib.h>

#define OLED_RESET -1
Adafruit_SSD1306 display(128, 64, &Wire, OLED_RESET);
RTC_DS3231 rtc;

const long interval = 1000;  // 1 second
unsigned long previousMillis = 0;

void setup() {
  Serial.begin(9600);
  Wire.begin();

  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println("SSD1306 allocation failed");
    while (1);
  }
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);

  if (!rtc.begin()) {
    Serial.println("RTC not found!");
    while (1);
  }

  Serial.println("Arduino ready");
}

void loop() {
  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;

    int val1 = analogRead(A0);
    int val2 = analogRead(A1);
    int val3 = analogRead(A2);
    int val4 = analogRead(A3);

    // Serial output: clean line with 4 integers
    Serial.print(val1); Serial.print(",");
    Serial.print(val2); Serial.print(",");
    Serial.print(val3); Serial.print(",");
    Serial.println(val4);

    DateTime now = rtc.now();

    display.clearDisplay();
    display.setCursor(0, 0);
    display.print("Time: ");
    if (now.hour() < 10) display.print("0");
    display.print(now.hour()); display.print(":");
    if (now.minute() < 10) display.print("0");
    display.print(now.minute()); display.print(":");
    if (now.second() < 10) display.print("0");
    display.print(now.second());

    display.setCursor(0, 12);
    display.print("Date: ");
    if (now.month() < 10) display.print("0");
    display.print(now.month()); display.print("/");
    if (now.day() < 10) display.print("0");
    display.print(now.day()); display.print("/");
    display.print(now.year());

    display.display();
  }
}

  display.display();
  }
}
